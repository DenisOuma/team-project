{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  };\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  const setCurrentContact = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  const clearContact = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  const filterContacts = text => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrentContact,\n      clearContact,\n      updateContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","v4","uuid","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrentContact","clearContact","updateContact","filterContacts","text","children"],"sources":["/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n\tADD_CONTACT,\n\tDELETE_CONTACT,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_CONTACT,\n\tFILTER_CONTACTS,\n\tCLEAR_FILTER,\n\tSET_ALERT,\n\tREMOVE_ALERT,\n} from \"../types\";\n\nconst ContactState = (props) => {\n\tconst initialState = {\n\t\tcontacts: [],\n\t\tcurrent: null,\n\t\tfiltered: null,\n\t};\n\n\tconst [state, dispatch] = useReducer(contactReducer, initialState);\n\n\tconst addContact = (contact) => {\n\t\tcontact.id = uuid();\n\t\tdispatch({ type: ADD_CONTACT, payload: contact });\n\t};\n\tconst deleteContact = (id) => {\n\t\tdispatch({ type: DELETE_CONTACT, payload: id });\n\t};\n\n\tconst setCurrentContact = (contact) => {\n\t\tdispatch({ type: SET_CURRENT, payload: contact });\n\t};\n\n\tconst clearContact = () => {\n\t\tdispatch({ type: CLEAR_CURRENT });\n\t};\n\n\tconst updateContact = (contact) => {\n\t\tdispatch({ type: UPDATE_CONTACT, payload: contact });\n\t};\n\tconst filterContacts = (text) => {\n\t\tdispatch({ type: UPDATE_CONTACT, payload: contact });\n\t};\n\n\treturn (\n\t\t<contactContext.Provider\n\t\t\tvalue={{\n\t\t\t\tcontacts: state.contacts,\n\t\t\t\tcurrent: state.current,\n\t\t\t\taddContact,\n\t\t\t\tdeleteContact,\n\t\t\t\tsetCurrentContact,\n\t\t\t\tclearContact,\n\t\t\t\tupdateContact,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</contactContext.Provider>\n\t);\n};\n\nexport default ContactState;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACCC,WADD,EAECC,cAFD,EAGCC,WAHD,EAICC,aAJD,EAKCC,cALD,EAMCC,eAND,EAOCC,YAPD,EAQCC,SARD,EASCC,YATD,QAUO,UAVP;;;AAYA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAMC,YAAY,GAAG;IACpBC,QAAQ,EAAE,EADU;IAEpBC,OAAO,EAAE,IAFW;IAGpBC,QAAQ,EAAE;EAHU,CAArB;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACI,cAAD,EAAiBY,YAAjB,CAApC;;EAEA,MAAMM,UAAU,GAAIC,OAAD,IAAa;IAC/BA,OAAO,CAACC,EAAR,GAAatB,IAAI,EAAjB;IACAmB,QAAQ,CAAC;MAAEI,IAAI,EAAEpB,WAAR;MAAqBqB,OAAO,EAAEH;IAA9B,CAAD,CAAR;EACA,CAHD;;EAIA,MAAMI,aAAa,GAAIH,EAAD,IAAQ;IAC7BH,QAAQ,CAAC;MAAEI,IAAI,EAAEnB,cAAR;MAAwBoB,OAAO,EAAEF;IAAjC,CAAD,CAAR;EACA,CAFD;;EAIA,MAAMI,iBAAiB,GAAIL,OAAD,IAAa;IACtCF,QAAQ,CAAC;MAAEI,IAAI,EAAElB,WAAR;MAAqBmB,OAAO,EAAEH;IAA9B,CAAD,CAAR;EACA,CAFD;;EAIA,MAAMM,YAAY,GAAG,MAAM;IAC1BR,QAAQ,CAAC;MAAEI,IAAI,EAAEjB;IAAR,CAAD,CAAR;EACA,CAFD;;EAIA,MAAMsB,aAAa,GAAIP,OAAD,IAAa;IAClCF,QAAQ,CAAC;MAAEI,IAAI,EAAEhB,cAAR;MAAwBiB,OAAO,EAAEH;IAAjC,CAAD,CAAR;EACA,CAFD;;EAGA,MAAMQ,cAAc,GAAIC,IAAD,IAAU;IAChCX,QAAQ,CAAC;MAAEI,IAAI,EAAEhB,cAAR;MAAwBiB,OAAO,EAAEH;IAAjC,CAAD,CAAR;EACA,CAFD;;EAIA,oBACC,QAAC,cAAD,CAAgB,QAAhB;IACC,KAAK,EAAE;MACNN,QAAQ,EAAEG,KAAK,CAACH,QADV;MAENC,OAAO,EAAEE,KAAK,CAACF,OAFT;MAGNI,UAHM;MAINK,aAJM;MAKNC,iBALM;MAMNC,YANM;MAONC;IAPM,CADR;IAAA,UAWEf,KAAK,CAACkB;EAXR;IAAA;IAAA;IAAA;EAAA,QADD;AAeA,CA/CD;;GAAMnB,Y;;KAAAA,Y;AAiDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}