{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/authentication/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport authContext from \"./authContext\";\nimport axios from \"axios\";\nimport authReducer from \"./authReducer\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const loadUser = async () => {\n    // @todo - load token into global headers\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","authContext","axios","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","setAuthToken","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","children"],"sources":["/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/authentication/AuthState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport authContext from \"./authContext\";\nimport axios from \"axios\";\nimport authReducer from \"./authReducer\";\nimport {\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n\tUSER_LOADED,\n\tAUTH_ERROR,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT,\n\tCLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = (props) => {\n\tconst initialState = {\n\t\ttoken: localStorage.getItem(\"token\"),\n\t\tisAuthenticated: null,\n\t\tloading: true,\n\t\tuser: null,\n\t\terror: null,\n\t};\n\n\tconst [state, dispatch] = useReducer(authReducer, initialState);\n\n\tconst loadUser = async () => {\n\t\t// @todo - load token into global headers\n\t\tif (localStorage.token) {\n\t\t\tsetAuthToken(localStorage.token);\n\t\t}\n\n\t\ttry {\n\t\t\tconst res = await axios.get(\"/api/auth\");\n\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst register = async (formData) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/api/users\", formData, config);\n\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_FAIL,\n\t\t\t\tpayload: err.response.data.msg,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<authContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttoken: state.token,\n\t\t\t\tisAuthenticated: state.isAuthenticated,\n\t\t\t\tloading: state.loading,\n\t\t\t\tuser: state.user,\n\t\t\t\terror: state.error,\n\t\t\t\tregister,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</authContext.Provider>\n\t);\n};\n\nexport default AuthState;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACCC,gBADD,EAECC,aAFD,EAGCC,WAHD,EAICC,UAJD,EAKCC,aALD,EAMCC,UAND,EAOCC,MAPD,EAQCC,YARD,QASO,UATP;;;AAWA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAMC,YAAY,GAAG;IACpBC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADa;IAEpBC,eAAe,EAAE,IAFG;IAGpBC,OAAO,EAAE,IAHW;IAIpBC,IAAI,EAAE,IAJc;IAKpBC,KAAK,EAAE;EALa,CAArB;EAQA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC;;EAEA,MAAMU,QAAQ,GAAG,YAAY;IAC5B;IACA,IAAIR,YAAY,CAACD,KAAjB,EAAwB;MACvBU,YAAY,CAACT,YAAY,CAACD,KAAd,CAAZ;IACA;;IAED,IAAI;MACH,MAAMW,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,WAAV,CAAlB;MAEAJ,QAAQ,CAAC;QACRK,IAAI,EAAEtB,WADE;QAERuB,OAAO,EAAEH,GAAG,CAACI;MAFL,CAAD,CAAR;IAIA,CAPD,CAOE,OAAOC,GAAP,EAAY;MACbR,QAAQ,CAAC;QACRK,IAAI,EAAErB;MADE,CAAD,CAAR;IAGA;EACD,CAlBD;;EAoBA,MAAMyB,QAAQ,GAAG,MAAOC,QAAP,IAAoB;IACpC,MAAMC,MAAM,GAAG;MACdC,OAAO,EAAE;QACR,gBAAgB;MADR;IADK,CAAf;;IAMA,IAAI;MACH,MAAMT,GAAG,GAAG,MAAMxB,KAAK,CAACkC,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCC,MAAnC,CAAlB;MAEAX,QAAQ,CAAC;QACRK,IAAI,EAAExB,gBADE;QAERyB,OAAO,EAAEH,GAAG,CAACI;MAFL,CAAD,CAAR;IAIA,CAPD,CAOE,OAAOC,GAAP,EAAY;MACbR,QAAQ,CAAC;QACRK,IAAI,EAAEvB,aADE;QAERwB,OAAO,EAAEE,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBQ;MAFnB,CAAD,CAAR;IAIA;EACD,CApBD;;EAsBA,oBACC,QAAC,WAAD,CAAa,QAAb;IACC,KAAK,EAAE;MACNvB,KAAK,EAAEO,KAAK,CAACP,KADP;MAENG,eAAe,EAAEI,KAAK,CAACJ,eAFjB;MAGNC,OAAO,EAAEG,KAAK,CAACH,OAHT;MAINC,IAAI,EAAEE,KAAK,CAACF,IAJN;MAKNC,KAAK,EAAEC,KAAK,CAACD,KALP;MAMNW;IANM,CADR;IAAA,UAUEnB,KAAK,CAAC0B;EAVR;IAAA;IAAA;IAAA;EAAA,QADD;AAcA,CAnED;;GAAM3B,S;;KAAAA,S;AAqEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}