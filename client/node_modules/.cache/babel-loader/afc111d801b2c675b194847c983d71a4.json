{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","state","action","type","contacts","payload","filter","contact","id","current","map","filtered"],"sources":["/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/contact/contactReducer.js"],"sourcesContent":["import {\n\tADD_CONTACT,\n\tDELETE_CONTACT,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_CONTACT,\n\tFILTER_CONTACTS,\n\tCLEAR_FILTER,\n\tSET_ALERT,\n\tREMOVE_ALERT,\n} from \"../types\";\n\nexport default (state, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CONTACT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: [...state.contacts, action.payload],\n\t\t\t};\n\n\t\tcase DELETE_CONTACT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: state.contacts.filter(\n\t\t\t\t\t(contact) => contact.id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase SET_CURRENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: action.payload,\n\t\t\t};\n\t\tcase CLEAR_CURRENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: null,\n\t\t\t};\n\t\tcase UPDATE_CONTACT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontacts: state.contacts.map((contact) =>\n\t\t\t\t\tcontact.id === action.payload.id ? action.payload : contact\n\t\t\t\t),\n\t\t\t};\n\t\tcase FILTER_CONTACTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiltered: state.contacts.filter(contact),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"],"mappings":"AAAA,SACCA,WADD,EAECC,cAFD,EAGCC,WAHD,EAICC,aAJD,EAKCC,cALD,EAMCC,eAND,EAOCC,YAPD,EAQCC,SARD,EASCC,YATD,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACC,KAAKX,WAAL;MACC,OAAO,EACN,GAAGS,KADG;QAENG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;MAFJ,CAAP;;IAKD,KAAKZ,cAAL;MACC,OAAO,EACN,GAAGQ,KADG;QAENG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACRC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD1B;MAFJ,CAAP;;IAMD,KAAKX,WAAL;MACC,OAAO,EACN,GAAGO,KADG;QAENQ,OAAO,EAAEP,MAAM,CAACG;MAFV,CAAP;;IAID,KAAKV,aAAL;MACC,OAAO,EACN,GAAGM,KADG;QAENQ,OAAO,EAAE;MAFH,CAAP;;IAID,KAAKb,cAAL;MACC,OAAO,EACN,GAAGK,KADG;QAENG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBH,OAAD,IAC5BA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD3C;MAFJ,CAAP;;IAMD,KAAKV,eAAL;MACC,OAAO,EACN,GAAGI,KADG;QAENU,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAtB;MAFJ,CAAP;;IAID;MACC,OAAON,KAAP;EArCF;AAuCA,CAxCD"},"metadata":{},"sourceType":"module"}