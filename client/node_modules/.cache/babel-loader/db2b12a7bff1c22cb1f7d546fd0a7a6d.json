{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, CONTACT_ERROR, CLEAR_CONTACTS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(`/api/contacts`, contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  };\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(\"/api/contacts\");\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  const setCurrentContact = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  const clearContact = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrentContact,\n      clearContact,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","axios","contactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","CONTACT_ERROR","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","clearContacts","setCurrentContact","clearContact","updateContact","filterContacts","text","clearFilter","children"],"sources":["/home/moringa/Desktop/Development/code/phase-2/contact-keeper/backend/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\n\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n\tGET_CONTACTS,\n\tADD_CONTACT,\n\tDELETE_CONTACT,\n\tSET_CURRENT,\n\tCLEAR_CURRENT,\n\tUPDATE_CONTACT,\n\tFILTER_CONTACTS,\n\tCLEAR_FILTER,\n\tSET_ALERT,\n\tREMOVE_ALERT,\n\tCONTACT_ERROR,\n\tCLEAR_CONTACTS,\n} from \"../types\";\n\nconst ContactState = (props) => {\n\tconst initialState = {\n\t\tcontacts: null,\n\t\tcurrent: null,\n\t\tfiltered: null,\n\t\terror: null,\n\t};\n\n\tconst [state, dispatch] = useReducer(contactReducer, initialState);\n\tconst getContacts = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\"/api/contacts\");\n\t\t\tdispatch({ type: GET_CONTACTS, payload: res.data });\n\t\t} catch (err) {\n\t\t\tdispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n\t\t}\n\t};\n\n\tconst addContact = async (contact) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\t\ttry {\n\t\t\tconst res = await axios.post(`/api/contacts`, contact, config);\n\t\t\tdispatch({ type: ADD_CONTACT, payload: res.data });\n\t\t} catch (err) {\n\t\t\tdispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n\t\t}\n\n\t\tdispatch({ type: ADD_CONTACT, payload: contact });\n\t};\n\tconst deleteContact = async (id) => {\n\t\ttry {\n\t\t\tawait axios.delete(\"/api/contacts\");\n\t\t\tdispatch({ type: ADD_CONTACT, payload: res.data });\n\t\t} catch (err) {\n\t\t\tdispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n\t\t}\n\t};\n\n\tconst clearContacts = () => {\n\t\tdispatch({ type: CLEAR_CONTACTS });\n\t};\n\n\tconst setCurrentContact = (contact) => {\n\t\tdispatch({ type: SET_CURRENT, payload: contact });\n\t};\n\n\tconst clearContact = () => {\n\t\tdispatch({ type: CLEAR_CURRENT });\n\t};\n\n\tconst updateContact = (contact) => {\n\t\tdispatch({ type: UPDATE_CONTACT, payload: contact });\n\t};\n\tconst filterContacts = (text) => {\n\t\tdispatch({ type: FILTER_CONTACTS, payload: text });\n\t};\n\tconst clearFilter = () => {\n\t\tdispatch({ type: CLEAR_FILTER });\n\t};\n\n\treturn (\n\t\t<contactContext.Provider\n\t\t\tvalue={{\n\t\t\t\tcontacts: state.contacts,\n\t\t\t\tcurrent: state.current,\n\t\t\t\tfiltered: state.filtered,\n\t\t\t\terror: state.error,\n\t\t\t\taddContact,\n\t\t\t\tdeleteContact,\n\t\t\t\tsetCurrentContact,\n\t\t\t\tclearContact,\n\t\t\t\tupdateContact,\n\t\t\t\tfilterContacts,\n\t\t\t\tclearFilter,\n\t\t\t\tgetContacts,\n\t\t\t\tclearContacts,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</contactContext.Provider>\n\t);\n};\n\nexport default ContactState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}